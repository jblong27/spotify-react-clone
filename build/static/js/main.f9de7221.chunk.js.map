{"version":3,"sources":["Login.js","TrackSearchResult.js","Player.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","href","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","height","width","title","artist","Player","accessToken","trackUri","useState","play","setPlay","useEffect","token","showSaveIcon","callback","state","isPlaying","uris","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","location","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9de7221.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=9d2bed93807448fe9f8b765614e48133&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\"\r\n\r\nexport default function Login() {\r\n  return <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: \"100vh\" }}>\r\n    <a href={AUTH_URL} className=\"btn btn-success btn-lg\">\r\n      Login With Spotify\r\n    </a>\r\n  </Container>\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TrackSearchResult({ track, chooseTrack }) {\r\n  function handlePlay() {\r\n    chooseTrack(track)\r\n  }\r\n  return <div className=\"d-flex m-2 align-items-center\" \r\n  style={{ cursor: 'pointer' }}\r\n  onClick={handlePlay}>\r\n    <img src={track.albumUrl} style={{ height:\"64px\", width:\"64px\" }}/>\r\n    <div className=\"ml-3\">\r\n      <div>{track.title}</div>\r\n      <div className=\"text-muted\">{track.artist}</div>\r\n    </div>\r\n  </div>\r\n}\r\n","import { useState, useEffect }  from 'react'\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\n\r\nexport default function Player({ accessToken, trackUri }) {\r\n  const [play, setPlay] = useState(false)\r\n\r\n  useEffect(() => setPlay(true), [trackUri])\r\n\r\n  if (!accessToken) return null\r\n  return <SpotifyPlayer\r\n  token={accessToken}\r\n  showSaveIcon\r\n  callback={state => {\r\n    if(!state.isPlaying) setPlay(false)\r\n  }}\r\n  play={play}\r\n  uris={trackUri ? [trackUri] : []}\r\n  />\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\nimport TrackSearchResult from './TrackSearchResult'\r\nimport Player from './Player'\r\nimport { Container, Form } from 'react-bootstrap'\r\nimport SpotifyWebApi from 'spotify-web-api-node'\r\nimport axios from 'axios'\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"9d2bed93807448fe9f8b765614e48133\",\r\n})\r\n\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code)\r\n  const [search, setSearch] = useState('')\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [playingTrack, setPlayingTrack] = useState()\r\n  const [lyrics, setLyrics] = useState('')\r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track)\r\n    setSearch('')\r\n    setLyrics('')\r\n  } \r\n\r\n  useEffect(() => {\r\n    if (!playingTrack) return\r\n    //create an api called lyrics\r\n    axios.get('http://localhost:3001/lyrics', {\r\n      params: {\r\n        track: playingTrack.title,\r\n        artist: playingTrack.artist\r\n      }\r\n    }).then(res => {\r\n      setLyrics(res.data.lyrics)\r\n    })\r\n  }, [playingTrack])\r\n\r\n  useEffect(() => {\r\n    //if you don't have an access token, return. otherwise set it on the spotify api to use the token for further queries\r\n    if (!accessToken) return\r\n    spotifyApi.setAccessToken(accessToken)\r\n  }, [accessToken])\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([])\r\n    if (!accessToken) return\r\n\r\n    let cancel = false\r\n    //search any tracks on spotify\r\n    spotifyApi.searchTracks(search).then(res => {\r\n      if (cancel) return\r\n      setSearchResults(res.body.tracks.items.map(track => {\r\n        const smallestAlbumImage = track.album.images.reduce(\r\n          (smallest, image) => {\r\n            // loop through images, and get smallest image\r\n            if(image.height < smallest.height) return image\r\n            return smallest\r\n          }, track.album.images[0])\r\n\r\n        return {\r\n          artist: track.artists[0].name,\r\n          title: track.name,\r\n          uri: track.uri,\r\n          albumUrl: smallestAlbumImage.url\r\n        }\r\n      }))\r\n    })\r\n\r\n    return () => cancel = true\r\n  }, [search, accessToken])\r\n\r\n  return <Container className=\"d-flex flex-column py-2\" style={{ \r\n    height: \"100vh\" }}>\r\n    <Form.Control \r\n      type=\"search\" \r\n      placeholder=\"Search Songs/Artists\" \r\n      value={search} \r\n      onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map(track => (\r\n          <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n        ))}\r\n        {searchResults.length === 0 && (\r\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\r\n           {lyrics}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n      <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n      </div>\r\n  </Container>\r\n\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState()\r\n  const [refreshToken, setRefreshToken] = useState()\r\n  const [expiresIn, setExpiresIn] = useState()\r\n\r\n  useEffect(() => { \r\n    axios\r\n      .post('http://localhost:3001/login', {\r\n        code,\r\n     })\r\n      .then(res => {\r\n        setAccessToken(res.data.accessToken)\r\n        setRefreshToken(res.data.refreshToken)\r\n        setExpiresIn(res.data.expiresIn)\r\n        //removing extra stuff from end of url\r\n        window.history.pushState({}, null, \"/\")\r\n     }).catch(() => {\r\n      //  window.location = \"/\"\r\n     })\r\n  }, [code])\r\n\r\n  useEffect(() => {\r\n    if (!refreshToken || !expiresIn) return\r\n    const interval = setInterval(() => { \r\n      axios\r\n        .post('http://localhost:3001/refresh', {\r\n          refreshToken,\r\n       })\r\n        .then(res => {\r\n          setAccessToken(res.data.accessToken)\r\n          setExpiresIn(res.data.expiresIn)\r\n       }).catch(() => {\r\n        //  window.location = \"/\"\r\n       })\r\n    }, (expiresIn - 60) * 1000)\r\n\r\n    return () => clearInterval(interval)\r\n\r\n  }, [refreshToken, expiresIn])\r\n\r\n  return accessToken\r\n}\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login'\nimport Dashboard from './Dashboard'\n\nconst code = new URLSearchParams(window.location.search).get('code')\n\nfunction App() {\n  return code ? <Dashboard code={code} /> : <Login />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}